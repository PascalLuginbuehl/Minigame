{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","js/game.ts","../common/Classes/Communicator.ts","../common/Classes/Entity.ts","../common/Classes/Game.ts","../common/Classes/Hitbox.ts","../common/Classes/Input.ts","../common/Classes/Model.ts","../common/Classes/Rectangle.ts","../common/Classes/Render.ts","../common/Classes/Vector.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Game from \"./../../common/Classes/Game\";\nimport Communicator from \"./../../common/Classes/Communicator\";\nimport Render from \"./../../common/Classes/Render\";\nimport Input from \"./../../common/Classes/Input\";\n\n'use strict'\n// IDEA: Circle collision\n// IDEA: z-index\n// IDEA: collision side\n// IDEA: Pathfinding\n// IDEA: sprites\n// IDEA: Players controller\n// IDEA: collsion speedup (AABB detection with outer part\n// FIXME: Outer colisionbox\n\nconst CONFIG = {\n  gameLoopInterval: 16,\n\n  map: {\n    height: 1000,\n    width: 1000,\n  },\n\n  textureBasepath: 'assets/images/',\n  textures: {\n    'dirt': {\n      texture: 'dirt.png',\n      w: 16,\n      h: 16,\n      spriteMax: 5,\n    },\n    'house': {\n      texture: 'house.png',\n      w: 254,\n      h: 198,\n      spriteMax: 1,\n    },\n    'duck': {\n      texture: 'player.png',\n      w: 16,\n      h: 18,\n      spriteMax: 4,\n    },\n  },\n\n  models: {\n    'dirt': {\n      solid: true,\n      static: false,\n      hitbox: [{\n        x: 0,\n        y: 0,\n        w: 16,\n        h: 16,\n      }],\n    },\n    'house': {\n      solid: true,\n      static: true,\n      hitbox: [{\n        x: 0,\n        y: 0,\n        w: 254,\n        h: 198,\n      }],\n    },\n    'duck': {\n      solid: true,\n      static: false,\n      hitbox: [{\n        x: 0,\n        y: 0,\n        w: 18,\n        h: 18,\n      }],\n    }\n  },\n}\n\n\nlet game = new Game(CONFIG, function() {return window.performance.now()});\nlet communicator = new Communicator(game);\nlet input = new Input(game, communicator);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let render = new Render(game, document.body, {\n    renderHitbox: true\n  }, communicator.player);\n});\n","import Game from \"./Game\";\nimport V from \"./Vector\";\nimport Entity from \"./Entity\";\n/**\n * Errorhandling for Client Server has its own...\n * Websocket here\n *\n */\nclass Communicator {\n  websocket: WebSocket;\n  game: Game;\n  player: Entity;\n  arrayPosition: number;\n\n  constructor(game) {\n    this.game = game;\n    this.websocket = new WebSocket('ws://192.168.1.112:8080');\n\n    this.player = new Entity(\n      new V(300, 300),\n      game.models['duck'],\n    );\n\n    this.websocket.onopen = () => {\n\n    };\n\n\n    // Log errors\n    this.websocket.onerror = (error) => {\n      console.log('WebSocket Error ' + error);\n    };\n\n    setInterval(() => {\n      this.websocket.send(JSON.stringify({action: \"movingElements\"}))\n    }, this.game.config.gameLoopInterval * 2);\n    // Log messages from the server\n    this.websocket.onmessage = (e) => {\n      // console.log(e.data);\n      try {\n        let data = JSON.parse(e.data);\n        switch (data.action) {\n          case \"staticElements\":\n            this.updateStaticElements(data.params);\n            break;\n          case \"movingElements\":\n            this.updateMovingElements(data.params);\n            break;\n          case \"force\":\n            this.updateForce(data.params);\n            break;\n          case \"player\":\n            this.createPlayer(data.params);\n            break;\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    this.websocket.onopen = () => {\n      this.websocket.send('{\"action\": \"staticElements\"}');\n    };\n\n    // game.__proto__.overtimeError = (overtime) => {\n    //   // console.log(overtime);\n    //   // console.log(this);\n    //   this.expectedInterval = window.performance.now();\n    //   // this.loadMap();\n    // };\n  }\n\n  /**\n   * sets force to force on arrayPosition\n   * @param {number} arrayPosition - position in Array\n   * @param {vector} force - new Force value\n   */\n  updateForce({arrayPosition: arrayPosition, force: force}) {\n    // console.log(this.game.entitys);\n    this.game.entitys[arrayPosition].force = new V(force);\n    // console.log(this.game.entitys[arrayPosition]);\n  }\n\n  /**\n   * Initialises static Elements which cant move\n   * @param\n   */\n\n\n  getMovingElements() {\n\n  }\n\n  updateMovingElements(data) {\n    for (let i = 0; i < data.length; i++) {\n      let entity = data[i];\n      if (entity) {\n        this.game.entitys[i] = new Entity(\n          entity.position,\n          this.game.models[entity.model],\n          new V(entity.velocity),\n          new V(entity.force),\n        );\n      }\n    }\n    this.player = this.game.entitys[this.arrayPosition];\n  }\n\n  createPlayer(params) {\n    this.arrayPosition = params;\n    this.player = this.game.entitys[params];\n  }\n\n  updateStaticElements(data) {\n    for (let i = 0; i < data.length; i++) {\n      let entity = data[i];\n      if (entity) {\n        this.game.entitys[i] = new Entity(\n          entity.position,\n          this.game.models[entity.model]\n        );\n      }\n    }\n  }\n\n\n  sendInput(v) {\n    this.websocket.send(JSON.stringify(v));\n  }\n}\n\nexport default Communicator;\n","import Model from \"./Model\";\nimport V from \"./Vector\";\n\nclass Entity {\n  model: Model;\n  force: V;\n  velocity: V;\n  position: V;\n  lastSprite: number;\n\n  constructor(position: V, model: Model, force: V = new V(0, 0), velocity: V = new V(0, 0)) {\n    // position\n    // left top of hitbox\n    this.position = new V(position);\n\n    // velocity for movement\n    this.velocity = new V(0, 0);\n\n    // pulls into Direction\n    this.force = new V(0, 0);\n\n    // IDEA: z-index\n\n    // Textures and rest is safed in here\n    this.model = model;\n  }\n\n  renderTexture(ctx) {\n    if (this.lastSprite == undefined || this.lastSprite >= this.model.spriteMax) {\n      this.lastSprite = 0;\n    }\n\n    // get direction\n    let rad = Math.atan2(this.velocity.x, this.velocity.y);\n    let a = Math.round(rad * (4 / Math.PI));\n    let direction = (a < -0 ? a * (-1) + 4 : a);\n    let speed = 0;\n    switch (direction) {\n      case 0:\n        speed = this.velocity.y;\n        break;\n      case 1:\n        speed = (this.velocity.x + this.velocity.y) / 2\n        break;\n\n      case 2:\n        speed = this.velocity.x;\n        break;\n\n      case 3:\n        speed = (this.velocity.x + (this.velocity.y * -1)) / 2\n        break;\n\n      case 8:\n      case 4:\n        speed = this.velocity.y * -1\n        break;\n\n      case 5:\n        speed = ((this.velocity.x * -1) + this.velocity.y) / 2\n        break;\n\n      case 6:\n        speed = this.velocity.x * -1\n        break;\n\n      case 7:\n        speed = ((this.velocity.x + this.velocity.y) / 2) * -1\n        break;\n    }\n\n\n    this.lastSprite += speed / 500;\n    // get direction\n    // get speed into direction\n    // Get texture\n    // Add to last sprite\n    // render\n\n    ctx.save();\n\n    // add center to it so it can rotate from center\n    // ctx.translate(this.position.x + this.center.x, this.position.y + this.center.y);\n    ctx.translate(this.position.x, this.position.y);\n    // ctx.rotate(this.angle);\n\n    ctx.drawImage(this.model.texture, this.model.textureSize.x * Math.floor(this.lastSprite), 0, this.model.textureSize.x, this.model.textureSize.y, 0, 0, this.model.textureSize.x, this.model.textureSize.y);\n    // ctx.drawImage(this.texture, 0 - this.center.x, 0 - this.center.y, this.size.x, this.size.y);\n    ctx.restore();\n  }\n\n\n  getModel(models) {\n    for (var name in models) {\n      if(this.model == models[name]) {\n        return name;\n      }\n    }\n  }\n}\n\nexport default Entity;\n","import Model from \"./Model\";\nimport Entity from \"./Entity\";\n/**\n * Class for game logic\n * @author Pascal Luginbühl\n * @version none\n */\n\n// needs timerfunction as param... :D\nexport default class Game {\n  models: Object;\n  config: any;\n  height: number;\n  width: number;\n  entitys: Array<Entity>\n  expectedInterval: number;\n  timeFunction: Function;\n  /** Creates game\n   * @param {object} config - Config file\n   */\n  constructor(config, timeFunction: Function) {\n    this.config = config;\n\n    // Map starting corner left bottom, render left top\n    // IDEA: Chunks for more performence\n\n    this.height = config.map.height;\n    this.width = config.map.width;\n    this.timeFunction = timeFunction;\n\n    this.entitys = [];\n\n\n    this.models = {};\n    for (var name in this.config.models) {\n      this.models[name] = new Model(this.config.models[name]);\n    }\n\n\n    // Timer for gameloop\n    this.expectedInterval = this.timeFunction() + this.config.gameLoopInterval;\n    setInterval(this.gameLoop.bind(this), this.config.gameLoopInterval, this.config.gameLoopInterval);\n  }\n\n\n  addEntity (entity) {\n    this.entitys.push(entity);\n  }\n\n  // catch up loop\n  gameLoop() {\n    // special for communicator and input\n    this.specialInput();\n\n    // let overtime = this.timeFunction() - this.expectedInterval;\n\n    // console.log(overtime);\n    // console.log(this.config.gameLoopInterval);\n    // console.log(this.expectedInterval);\n\n    // if (overtime > this.config.gameLoopInterval) {\n    //   this.overtimeError(overtime);\n    //   console.log(\"error\");\n    //   this.expectedInterval = this.timeFunction();\n    //   // error, overtime longer then Interval, sync with server...\n    // }\n    //\n    // let delay = (overtime + this.config.gameLoopInterval) / 1000;\n    let delay = 16 / 1000;\n    // console.log(delay);\n\n    // physics here\n    for (let i = 0; i < this.entitys.length; i++) {\n      let entity = this.entitys[i];\n      if (entity && !entity.model.static) {\n\n        let acceleration = entity.force.scale(2000);\n        // idk wahts betta\n        // let friction = 0.08;\n        let friction = 0.8;\n        // entity.velocity = entity.velocity.add(acceleration.subtract(entity.velocity.scale(friction)));\n\n        entity.velocity = entity.velocity.add(acceleration.scale(delay)).scale(.92);\n\n        // console.log(entity.velocity);\n        let position = entity.position.add(entity.velocity.scale(delay));\n        // let rect = new Rectangle({min: entity.hitbox.min.add(entity.velocity.scale(delay)), max: entity.hitbox.max});\n        // velocity += acceleration * time_step\n        // position += velocity * time_step\n\n        let collision = false;\n\n        // collisions\n        for (let o = 0; o < this.entitys.length; o++) {\n          let entity2 = this.entitys[o];\n          // check collision\n\n          if (entity2 && entity != entity2 && entity.model.solid && entity2.model.solid) {\n\n            // FIXME: do better physX\n            // Collision detection\n            if (entity.model.hitbox.checkCollision(position, entity2.position, entity2.model.hitbox)) {\n              collision = true;\n            }\n          }\n        }\n\n\n        if (collision) {\n          entity.velocity = entity.velocity.scale(.1);\n        } else {\n          entity.position = position;\n        }\n      }\n    }\n\n\n    // this.expectedInterval += this.config.gameLoopInterval;\n    //\n    // console.log(this.config.gameLoopInterval);\n    // console.log(overtime);\n    // console.log(this.config.gameLoopInterval - overtime);\n    // setTimeout(this.gameLoop.bind(this), this.config.gameLoopInterval - overtime);\n  }\n\n  overtimeError(overtime) {\n    console.error(\"overtimeError: \" + overtime);\n  }\n\n  specialInput() {\n\n  }\n\n  exportMap() {\n    let returnValue = [];\n    for (var i = 0; i < this.entitys.length; i++) {\n      let entity = this.entitys[i];\n\n      for (let model in this.models) {\n        if (this.models[model] == entity.model) {\n          returnValue.push({position: entity.position, velocity: entity.velocity, force: entity.force, model: model});\n        }\n      }\n    }\n    return returnValue;\n  }\n}\n","import V from \"./Vector\";\nimport Rectangle from \"./Rectangle\";\n\nclass Hitbox {\n  hitboxes: Array<Rectangle>;\n  collisionBox: Rectangle;\n\n  constructor(hitboxconf) {\n    this.hitboxes = [];\n    for (let i = 0; i < hitboxconf.length; i++) {\n      this.hitboxes.push(new Rectangle(hitboxconf[i]));\n    }\n\n    this.collisionBox = this.getCollisionBox();\n  }\n\n  checkCollision(origin, eOrigin, eHitbox) {\n    if (this.collisionBox.checkCollision(origin, eOrigin, eHitbox.collisionBox)) {\n      for (let i = 0; i < this.hitboxes.length; i++) {\n        let hitboxes = this.hitboxes[i];\n\n        for (let o = 0; o < eHitbox.hitboxes.length; o++) {\n\n          if (hitboxes.checkCollision(origin, eOrigin, eHitbox.hitboxes[o])) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  getCollisionBox() {\n    let max = new V(0, 0);\n\n    for (let i = 0; i < this.hitboxes.length; i++) {\n      let hitbox = this.hitboxes[i];\n\n      max = max.biggest(hitbox.min.add(hitbox.max));\n    }\n\n    let min = new V(max.x, max.y);\n\n    for (let i = 0; i < this.hitboxes.length; i++) {\n      min = min.smalest(this.hitboxes[i].min);\n    }\n\n    return new Rectangle({min: min, max: max});\n  }\n}\n\nexport default Hitbox;\n","import Game from \"./Game\";\nimport Communicator from \"./Communicator\";\nimport Entity from \"./Entity\";\nimport V from \"./Vector\";\n/**\n * Input for user inputs.\n * Communicator for communicating to WebSocket\n */\nclass Input {\n  game: Game\n  communicator: Communicator;\n  keys: any;\n\n  constructor(game, communicator) {\n    this.game = game;\n    this.communicator = communicator;\n\n\n\n    this.keys = {\n      w: false,\n      a: false,\n      s: false,\n      d: false,\n      ArrowUp: false,\n      ArrowLeft: false,\n      ArrowDown: false,\n      ArrowRigth: false,\n    }\n    // console.log(communicator);\n\n    let keys = this.keys;\n\n    window.addEventListener('keydown', (e) => {\n      // console.log(this.communicator);\n      if (this.keys.hasOwnProperty(e.key)) {\n        this.keys[e.key] = true;\n        this.communicator.player.force = this.direction();\n\n        this.communicator.sendInput({action: \"force\",  params: this.direction()});\n        e.preventDefault();\n      }\n    });\n\n    window.addEventListener('keyup', (e) => {\n      if (this.keys.hasOwnProperty(e.key)) {\n        this.keys[e.key] = false;\n        this.communicator.player.force = this.direction();\n\n        this.communicator.sendInput({action: \"force\",  params: this.direction()});\n        e.preventDefault();\n      }\n    });\n  }\n\n  direction() {\n    let v = new V(0, 0);\n    if (this.keys.w) {\n      v.y-- ;\n    }\n    if (this.keys.a) {\n      v.x--;\n    }\n    if (this.keys.s) {\n      v.y++;\n    }\n    if (this.keys.d) {\n      v.x++;\n    }\n    return v;\n  }\n}\nexport default Input;\n","import Hitbox from \"./Hitbox\";\n\nclass Model {\n  solid: boolean;\n  static: boolean;\n  hitbox: Hitbox;\n  spriteMax: number;\n  texture: any;\n  textureSize: any;\n\n  constructor({solid: solid = true, static: staticElem = false, hitbox: hitbox}) {\n    // this.hitbox = [new Rectangle({x: 0, y: 0, w: 10, h: 10})];\n\n\n    // comes to renderengine\n    // IDEA: Also able to set via reference to type\n    // this.texture = texture;\n    // this.textureSize = new V(10, 10);\n\n    // FIXME: Fix inputs from config\n    // parameters\n    this.solid = solid;\n    this.static = staticElem;\n\n    this.hitbox = new Hitbox(hitbox);\n  }\n}\n\nexport default Model;\n","import V from \"./Vector\";\n\nclass Rectangle {\n  max: V;\n  min: V;\n\n  constructor({x: x = 0, y: y = 0, w: w = 0, h: h = 0, min: min, max: max}) {\n    if (min != undefined && max != undefined) {\n      this.min = min;\n      this.max = max;\n    } else {\n      this.min = new V(x, y);\n      this.max = new V(w, h);\n    }\n    // this._rotation = 0;\n    // let rotation = 5;\n    // this.center = new V(0, 0);\n  }\n\n  // get rotation() {\n  //   console.log(rotation, \"asd\");\n  //   return rotation;\n  // }\n\n  // set rotation(rotation) {\n  //   this._rotation = rotation;\n  // }\n\n  checkCollision(origin, originRect, rect) {\n    let rectMin = rect.min.add(originRect);\n\n    // let thisMin = rect.min.add(origin).add(rect.min);\n    let thisMin = this.min.add(origin);\n\n    if (thisMin.x < rectMin.x + rect.max.x && this.max.x + thisMin.x > rectMin.x && thisMin.y < rect.max.y + rectMin.y && this.max.y + thisMin.y > rectMin.y) {\n      return true;\n    }\n    return false;\n  }\n\n  drawRect(position, ctx) {\n    ctx.save();\n\n    // add center to it so it can rotate from center\n    // ctx.translate(this.position.x + this.center.x, this.position.y + this.center.y);\n    position = position.add(this.min);\n    ctx.translate(position.x, position.y);\n    // ctx.rotate(this.angle);\n    ctx.fillStyle = \"rgba(0, 0, 0, .3)\";\n    ctx.fillRect(0, 0, this.max.x, this.max.y);\n\n    // ctx.drawImage(this.texture, 0 - this.center.x, 0 - this.center.y, this.size.x, this.size.y);\n    ctx.restore();\n  };\n}\n\nexport default Rectangle;\n","import Game from \"./Game\";\nimport V from \"./Vector\";\nimport Entity from \"./Entity\";\nimport Rectangle from \"./Rectangle\";\n\n\nclass Render {\n  canvas: any;\n  ctx: CanvasRenderingContext2D;\n  origin: any;\n  game: Game;\n  debugging: any;\n\n\n  constructor(game, canvasParent, debugging, origin) {\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.height = this.canvas.height = document.documentElement.clientHeight;\n    this.canvas.width = this.canvas.width = document.documentElement.clientWidth;\n\n    canvasParent.appendChild(this.canvas);\n\n    this.canvas.style.imageRendering = \"pixelated\";\n\n    this.ctx = this.canvas.getContext(\"2d\");\n\n    this.origin = origin;\n\n    // preload images\n    this.game = game;\n\n    this.debugging = debugging;\n\n\n    for (let name in this.game.models) {\n      let img = new Image();\n      let texture = this.game.config.textures[name];\n\n      img.src = \"assets/images/\" + texture.texture;\n\n      this.game.models[name].spriteMax = texture.spriteMax;\n      this.game.models[name].texture = img;\n      this.game.models[name].textureSize = new V(texture.w, texture.h);\n    }\n\n    window.addEventListener('resize', () => {\n      this.canvas.width = document.documentElement.clientWidth;\n      this.canvas.height = document.documentElement.clientHeight;\n    });\n\n\n\n\n    // this.render();\n    // setTimeout(this.render.bind(this), 1);\n\n    // standard Interval\n    setInterval(this.render.bind(this), Math.round(1000 / 60));\n  }\n\n\n  render() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.save();\n    this.ctx.translate(this.origin.position.x * -1 + this.canvas.width/2, this.origin.position.y * -1 + this.canvas.height/2);\n    // Clear old stuff\n\n\n    for (let i = 0; i < this.game.entitys.length; i++) {\n      let entity = this.game.entitys[i];\n      if (entity) {\n        entity.renderTexture(this.ctx);\n        for (let i = 0; i < entity.model.hitbox.hitboxes.length; i++) {\n          entity.model.hitbox.hitboxes[i].drawRect(entity.position, this.ctx);\n        }\n      }\n    }\n    this.ctx.restore();\n  }\n}\nexport default Render;\n","class V {\n  x: number;\n  y: number;\n\n\n  constructor (x, y?) {\n    // console.trace(x, y);\n    // console.log(x, y);\n    if (x instanceof Object) {\n      this.x = Math.round(x.x * 10) / 10;\n      this.y = Math.round(x.y * 10) / 10;\n    } else {\n      this.x = Math.round(x * 10) / 10;\n      this.y = Math.round(y * 10) / 10;\n    }\n\n  }\n\n  add(v): V {\n    return new V(Math.round((v.x + this.x) * 10) / 10, Math.round((v.y + this.y) * 10) / 10);\n  }\n\n  subtract(v): V {\n    return new V(Math.round((this.x - v.x) * 10) / 10, Math.round((this.y - v.y) * 10) / 10);\n  }\n\n  scale(s): V {\n    return new V(Math.round((this.x * s) * 10) / 10 , Math.round((this.y * s) * 10) / 10);\n  }\n\n  dot(v) {\n    return (this.x * v.x + this.y * v.y);\n  }\n\n  cross(v) {\n    return (this.x * v.y - this.y * v.x);\n  }\n\n  smalest(v): V {\n    let x = this.x < v.x ? this.x : v.x\n      , y = this.y < v.y ? this.y : v.y;\n    return new V(x, y);\n  }\n\n  biggest(v): V {\n    let x = this.x > v.x ? this.x : v.x\n      , y = this.y > v.y ? this.y : v.y;\n    return new V(x, y);\n  }\n\n  rotate(angle, vector): V {\n    let x = this.x - vector.x;\n    let y = this.y - vector.y;\n\n    let x_prime = vector.x + ((x * Math.cos(angle)) - (y * Math.sin(angle)));\n    let y_prime = vector.y + ((x * Math.sin(angle)) + (y * Math.cos(angle)));\n\n    return new V(x_prime, y_prime);\n  }\n}\n\n\nexport default V;\n"]}